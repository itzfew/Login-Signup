<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Home</title>
    <link rel="stylesheet" href="css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#ff6600">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        header {
            background-color: #0583D2;
            color: white;
            padding: 10px;
            text-align: center;
            position: relative;
        }
        #profile {
            position: absolute;
            top: 10px;
            right: 20px;
            cursor: pointer;
        }
        .profile-icon {
            font-size: 24px;
            color: white;
            border: 2px solid white;
            border-radius: 50%;
            padding: 5px;
            background-color: rgba(255, 255, 255, 0.2);
        }
        .popup {
            display: none;
            position: absolute;
            top: 50px;
            right: 20px;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        .popup.active {
            display: block;
        }
        .button-card, .button-category {
            margin: 10px;
        }
        .btn-card, .btn-category {
            text-decoration: none;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: white;
            color: #0583D2;
            display: flex;
            align-items: center;
            transition: background-color 0.3s;
        }
        .btn-card:hover, .btn-category:hover {
            background-color: #e2e2e2;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <header>
        <h1>EDU HUB</h1>
        <div id="profile" class="profile-icon">
            <i class="fa fa-user-circle"></i>
            <div class="popup" id="popup">
                <div id="user-info" class="hidden"></div>
                <button id="logout-btn" class="hidden">Logout</button>
                <div id="auth-buttons">
                    <button id="login-btn">Login</button>
                    <button id="signup-btn">Sign Up</button>
                </div>
            </div>
        </div>
    </header>

    <!-- Additional Section for Buttons -->
    <section id="utility-buttons">
        <div class="button-card">
            <a href="useful/omr.html" class="btn-card"><i class="fas fa-clipboard"></i> OMR Sheet</a>
        </div>
        <div class="button-card">
            <a href="useful/calculate.html" class="btn-card"><i class="fas fa-calculator"></i> Calculator</a>
        </div>
        <div class="button-card">
            <a href="useful/stopwatch.html" class="btn-card"><i class="fas fa-stopwatch"></i> Stopwatch</a>
        </div>
        <div class="button-card">
            <a href="useful/streak.html" class="btn-card"><i class="fas fa-calendar-check"></i> Streak Tracker</a>
        </div>
    </section>

    <!-- Section for Categories -->
    <section id="category-buttons">
        <h2>Explore Topics</h2>
        <div class="button-category">
            <a href="section2/neet.html" class="btn-category"><i class="fas fa-heartbeat"></i> NEET</a>
        </div>
        <div class="button-category">
            <a href="section2/jee.html" class="btn-category"><i class="fas fa-cogs"></i> JEE</a>
        </div>
        <div class="button-category">
            <a href="section2/boards.html" class="btn-category"><i class="fas fa-school"></i> Boards</a>
        </div>
        <div class="button-category">
            <a href="section2/pyqs.html" class="btn-category"><i class="fas fa-book"></i> PYQs</a>
        </div>
        <div class="button-category">
            <a href="section2/books.html" class="btn-category"><i class="fas fa-book-reader"></i> Books</a>
        </div>
        <div class="button-category">
            <a href="section2/pdfs.html" class="btn-category"><i class="fas fa-file-pdf"></i> PDFs</a>
        </div>
    </section>

    <section id="controls">
        <button class="btn" onclick="sortPosts('date')">Sort by Date</button>
        <button class="btn" onclick="sortPosts('title')">Sort by Title</button>
        <label for="filter">Filter by Category:</label>
        <select id="filter" onchange="filterPosts()" class="dropdown">
            <option value="">All Categories</option>
            <option value="Education">EDUCATION</option>
        </select>
    </section>

    <section id="blog-posts" class="blog-posts">
        <!-- Blog posts will be loaded here by JavaScript -->
    </section>

    <footer>
        <p>Â© 2024 Edu Hub</p>
    </footer>
    
    <!-- Install Button -->
    <button id="install-button" class="install-btn hidden">
        <i class="fas fa-download"></i>
    </button>

    <!-- Firebase and Service Worker registration -->
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-app.js";
        import { getAuth, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-auth.js";

        // Firebase configuration
        const firebaseConfig = {
            apiKey: "AIzaSyCotpjWvQ5cG5cOpgiNvpAS4ftvwKRO_N0",
            authDomain: "eduhub-a3762.firebaseapp.com",
            projectId: "eduhub-a3762",
            storageBucket: "eduhub-a3762.appspot.com",
            messagingSenderId: "115221366217",
            appId: "1:115221366217:web:d6cee26ef04752d1519418",
            measurementId: "G-X1MQF5SR3Z"
        };

        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);

        const popup = document.getElementById("popup");
        const userInfo = document.getElementById("user-info");
        const logoutBtn = document.getElementById("logout-btn");
        const profileIcon = document.getElementById("profile");

        // Check auth state
        onAuthStateChanged(auth, (user) => {
            if (user) {
                const firstName = user.email.split('@')[0];
                const userEmail = user.email;
                userInfo.innerHTML = `<strong>${firstName.charAt(0).toUpperCase() + firstName.slice(1)}</strong><br>${userEmail}`;
                userInfo.classList.remove("hidden");
                logoutBtn.classList.remove("hidden");
                document.getElementById("auth-buttons").classList.add("hidden");
            } else {
                userInfo.classList.add("hidden");
                logoutBtn.classList.add("hidden");
                document.getElementById("auth-buttons").classList.remove("hidden");
            }
        });

        // Event listener for profile icon click
        profileIcon.addEventListener("click", () => {
            popup.classList.toggle("active");
        });

        // Event listeners for auth buttons
        document.getElementById("login-btn").addEventListener("click", () => {
            window.location.href = "user.html"; // Redirect to login page
        });

        document.getElementById("signup-btn").addEventListener("click", () => {
            window.location.href = "user.html"; // Redirect to sign-up page
        });

        // Logout functionality
        logoutBtn.addEventListener("click", () => {
            signOut(auth).then(() => {
                console.log("User signed out");
            }).catch((error) => {
                console.error("Sign out error:", error);
            });
        });

        // Service Worker registration
        let deferredPrompt;
        const installButton = document.getElementById('install-button');

        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/service-worker.js')
                    .then(registration => {
                        console.log('ServiceWorker registration successful with scope: ', registration.scope);
                    })
                    .catch(error => {
                        console.error('ServiceWorker registration failed: ', error);
                    });
            });
        }

        window.addEventListener('beforeinstallprompt', (e) => {
            e.preventDefault();
            deferredPrompt = e;
            installButton.classList.remove('hidden');
        });

        installButton.addEventListener('click', () => {
            if (deferredPrompt) {
                deferredPrompt.prompt();
                deferredPrompt.userChoice.then((choiceResult) => {
                    if (choiceResult.outcome === 'accepted') {
                        console.log('User accepted the A2HS prompt');
                    } else {
                        console.log('User dismissed the A2HS prompt');
                    }
                    deferredPrompt = null;
                });
            }
        });

        window.addEventListener('appinstalled', () => {
            console.log('PWA was installed');
            installButton.classList.add('hidden');
        });
    </script>
</body>
</html>
